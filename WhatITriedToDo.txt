My topic was Board Games. I love playing board games but I never thought about selling them. 
(Of course I didn't steal the idea from our OOP Book. ”Another idea could be a shop selling seeds, or plants for farming.”)

I tried to create a board game shop, where it is possible to buy different kinds of board games such as strategy, family, party games;
and of course as the owner adding the games, stocking, giving discounts etc. 

Firstly I created the abstract base class for the board games so that every different genres of the board games have their essential name, 
publisher and price attributes. Also their basic descriptions, price calculations(Unfortunately, it doesn't actually calculate) and any
details to be shown.
Afterwards I created the genres file where 8 different genres of the board games have their own implementation of the price. description,
details and complexity. I also added different attributes to each such as age recommendation, tips, max players and so on. (Half of my 
coding time was searching up the names of the games and their details. I even checked amazon to find their approximate prices!)

Next up, I created a shop class for the user of the system to showcase the inventory, add games, sell games, see the games in the 
inventory. This was solely to manage the inventory of the shop but I also found out about the Factory method when I was doing research.
I used it to add completely nw games to the inventory. While I didn't fully understand the concept and implementation of the method. I 
managed to imply parameters for the games so they can be added to their spesific genre and be stored in the inventory. Similarly, I
searched for a way to keep track of the actions taken in the shop class such as adding or selling a game.

Lastly, in order to add an extra feature I created discounts class. I didn't want to add it to the main bgames class because I do not
want every game to have the discount feature at all times. So if wanted it can be added and changed to different genres or a spesific
game in a genre. It works simply by determining the rate and calculating mathematically.

I have tested all my abstarct classes in the tests folder using unittest (I couldn't import Pytest for my life).

------------------------
